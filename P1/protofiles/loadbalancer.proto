syntax = "proto3";

package lb;

option go_package = "./lb";

// Define the load balancing policies.
enum BalancingPolicy {
  BalancingPolicy_UNSPECIFIED = 0;
  BalancingPolicy_PICK_FIRST = 1;
  BalancingPolicy_ROUND_ROBIN = 2;
  BalancingPolicy_LEAST_LOAD = 3;
}

// Request message for backend registration.
message RegisterBackendRequest {
  string server_address = 1;
}

// Response message for backend registration.
message RegisterBackendResponse {
  bool success = 1;
}

// Request message for reporting load.
message ReportLoadRequest {
  string server_address = 1;
  int32 load = 2;
}

// Response message for reporting load.
message ReportLoadResponse {
  bool success = 1;
}

// Request message for querying the best backend.
message GetBestServerRequest {
  BalancingPolicy policy = 1;
}

// Response message for querying the best backend.
message GetBestServerResponse {
  string server_address = 1;
  int32 load = 2;
}

// The Load Balancer service definition.
service LoadBalancer {
  rpc RegisterBackend(RegisterBackendRequest) returns (RegisterBackendResponse);
  rpc ReportLoad(ReportLoadRequest) returns (ReportLoadResponse);
  rpc GetBestServer(GetBestServerRequest) returns (GetBestServerResponse);
}
