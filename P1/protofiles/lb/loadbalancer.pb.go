// protofiles/loadbalancer.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: loadbalancer.proto

package lb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for balancing policies.
type BalancingPolicy int32

const (
	BalancingPolicy_UNSPECIFIED BalancingPolicy = 0
	BalancingPolicy_PICK_FIRST  BalancingPolicy = 1
	BalancingPolicy_ROUND_ROBIN BalancingPolicy = 2
	BalancingPolicy_LEAST_LOAD  BalancingPolicy = 3
)

// Enum value maps for BalancingPolicy.
var (
	BalancingPolicy_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "PICK_FIRST",
		2: "ROUND_ROBIN",
		3: "LEAST_LOAD",
	}
	BalancingPolicy_value = map[string]int32{
		"UNSPECIFIED": 0,
		"PICK_FIRST":  1,
		"ROUND_ROBIN": 2,
		"LEAST_LOAD":  3,
	}
)

func (x BalancingPolicy) Enum() *BalancingPolicy {
	p := new(BalancingPolicy)
	*p = x
	return p
}

func (x BalancingPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BalancingPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_loadbalancer_proto_enumTypes[0].Descriptor()
}

func (BalancingPolicy) Type() protoreflect.EnumType {
	return &file_loadbalancer_proto_enumTypes[0]
}

func (x BalancingPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BalancingPolicy.Descriptor instead.
func (BalancingPolicy) EnumDescriptor() ([]byte, []int) {
	return file_loadbalancer_proto_rawDescGZIP(), []int{0}
}

// Request for backend registration.
type RegisterBackendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerAddress string                 `protobuf:"bytes,1,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterBackendRequest) Reset() {
	*x = RegisterBackendRequest{}
	mi := &file_loadbalancer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterBackendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterBackendRequest) ProtoMessage() {}

func (x *RegisterBackendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loadbalancer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterBackendRequest.ProtoReflect.Descriptor instead.
func (*RegisterBackendRequest) Descriptor() ([]byte, []int) {
	return file_loadbalancer_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterBackendRequest) GetServerAddress() string {
	if x != nil {
		return x.ServerAddress
	}
	return ""
}

// Response for backend registration.
type RegisterBackendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterBackendResponse) Reset() {
	*x = RegisterBackendResponse{}
	mi := &file_loadbalancer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterBackendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterBackendResponse) ProtoMessage() {}

func (x *RegisterBackendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_loadbalancer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterBackendResponse.ProtoReflect.Descriptor instead.
func (*RegisterBackendResponse) Descriptor() ([]byte, []int) {
	return file_loadbalancer_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterBackendResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request to report backend load.
type ReportLoadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerAddress string                 `protobuf:"bytes,1,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
	Load          int32                  `protobuf:"varint,2,opt,name=load,proto3" json:"load,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportLoadRequest) Reset() {
	*x = ReportLoadRequest{}
	mi := &file_loadbalancer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportLoadRequest) ProtoMessage() {}

func (x *ReportLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loadbalancer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportLoadRequest.ProtoReflect.Descriptor instead.
func (*ReportLoadRequest) Descriptor() ([]byte, []int) {
	return file_loadbalancer_proto_rawDescGZIP(), []int{2}
}

func (x *ReportLoadRequest) GetServerAddress() string {
	if x != nil {
		return x.ServerAddress
	}
	return ""
}

func (x *ReportLoadRequest) GetLoad() int32 {
	if x != nil {
		return x.Load
	}
	return 0
}

// Response for load report.
type ReportLoadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportLoadResponse) Reset() {
	*x = ReportLoadResponse{}
	mi := &file_loadbalancer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportLoadResponse) ProtoMessage() {}

func (x *ReportLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_loadbalancer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportLoadResponse.ProtoReflect.Descriptor instead.
func (*ReportLoadResponse) Descriptor() ([]byte, []int) {
	return file_loadbalancer_proto_rawDescGZIP(), []int{3}
}

func (x *ReportLoadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request for getting the best backend.
type GetBestServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        BalancingPolicy        `protobuf:"varint,1,opt,name=policy,proto3,enum=lb.BalancingPolicy" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBestServerRequest) Reset() {
	*x = GetBestServerRequest{}
	mi := &file_loadbalancer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBestServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBestServerRequest) ProtoMessage() {}

func (x *GetBestServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loadbalancer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBestServerRequest.ProtoReflect.Descriptor instead.
func (*GetBestServerRequest) Descriptor() ([]byte, []int) {
	return file_loadbalancer_proto_rawDescGZIP(), []int{4}
}

func (x *GetBestServerRequest) GetPolicy() BalancingPolicy {
	if x != nil {
		return x.Policy
	}
	return BalancingPolicy_UNSPECIFIED
}

// Response providing the selected backend.
type GetBestServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerAddress string                 `protobuf:"bytes,1,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBestServerResponse) Reset() {
	*x = GetBestServerResponse{}
	mi := &file_loadbalancer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBestServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBestServerResponse) ProtoMessage() {}

func (x *GetBestServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_loadbalancer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBestServerResponse.ProtoReflect.Descriptor instead.
func (*GetBestServerResponse) Descriptor() ([]byte, []int) {
	return file_loadbalancer_proto_rawDescGZIP(), []int{5}
}

func (x *GetBestServerResponse) GetServerAddress() string {
	if x != nil {
		return x.ServerAddress
	}
	return ""
}

var File_loadbalancer_proto protoreflect.FileDescriptor

var file_loadbalancer_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x6c, 0x62, 0x22, 0x3f, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x33, 0x0a, 0x17, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4e,
	0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x2e,
	0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x43,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x62, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x22, 0x3e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x65, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x2a, 0x53, 0x0a, 0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x49, 0x43, 0x4b, 0x5f,
	0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x4f, 0x55, 0x4e, 0x44,
	0x5f, 0x52, 0x4f, 0x42, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x45, 0x41, 0x53,
	0x54, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x03, 0x32, 0xdd, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x61,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x6c,
	0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6c, 0x62, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x6f, 0x61, 0x64, 0x12, 0x15, 0x2e, 0x6c, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6c, 0x62, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6c, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x6c, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x6c, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_loadbalancer_proto_rawDescOnce sync.Once
	file_loadbalancer_proto_rawDescData []byte
)

func file_loadbalancer_proto_rawDescGZIP() []byte {
	file_loadbalancer_proto_rawDescOnce.Do(func() {
		file_loadbalancer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_loadbalancer_proto_rawDesc), len(file_loadbalancer_proto_rawDesc)))
	})
	return file_loadbalancer_proto_rawDescData
}

var file_loadbalancer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_loadbalancer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_loadbalancer_proto_goTypes = []any{
	(BalancingPolicy)(0),            // 0: lb.BalancingPolicy
	(*RegisterBackendRequest)(nil),  // 1: lb.RegisterBackendRequest
	(*RegisterBackendResponse)(nil), // 2: lb.RegisterBackendResponse
	(*ReportLoadRequest)(nil),       // 3: lb.ReportLoadRequest
	(*ReportLoadResponse)(nil),      // 4: lb.ReportLoadResponse
	(*GetBestServerRequest)(nil),    // 5: lb.GetBestServerRequest
	(*GetBestServerResponse)(nil),   // 6: lb.GetBestServerResponse
}
var file_loadbalancer_proto_depIdxs = []int32{
	0, // 0: lb.GetBestServerRequest.policy:type_name -> lb.BalancingPolicy
	1, // 1: lb.LoadBalancer.RegisterBackend:input_type -> lb.RegisterBackendRequest
	3, // 2: lb.LoadBalancer.ReportLoad:input_type -> lb.ReportLoadRequest
	5, // 3: lb.LoadBalancer.GetBestServer:input_type -> lb.GetBestServerRequest
	2, // 4: lb.LoadBalancer.RegisterBackend:output_type -> lb.RegisterBackendResponse
	4, // 5: lb.LoadBalancer.ReportLoad:output_type -> lb.ReportLoadResponse
	6, // 6: lb.LoadBalancer.GetBestServer:output_type -> lb.GetBestServerResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_loadbalancer_proto_init() }
func file_loadbalancer_proto_init() {
	if File_loadbalancer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_loadbalancer_proto_rawDesc), len(file_loadbalancer_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_loadbalancer_proto_goTypes,
		DependencyIndexes: file_loadbalancer_proto_depIdxs,
		EnumInfos:         file_loadbalancer_proto_enumTypes,
		MessageInfos:      file_loadbalancer_proto_msgTypes,
	}.Build()
	File_loadbalancer_proto = out.File
	file_loadbalancer_proto_goTypes = nil
	file_loadbalancer_proto_depIdxs = nil
}
